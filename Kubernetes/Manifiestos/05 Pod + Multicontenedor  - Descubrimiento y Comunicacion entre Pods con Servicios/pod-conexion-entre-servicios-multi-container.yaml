apiVersion: v1
kind: Pod
metadata:
  labels:
    run: pod-v1 # base del selector
  name: mc-pod-v1 # nombre del HOSTNAME del POD y el nombre del POD en k8s
spec:
    
  containers:
  - name: python # nombre que va a tener el contenedor dentro del POD
    image: jorgecardona/test-kubernetes-ip-python-3.10.5:v1 # imagen con la que se va a crear el contenedor
      
  - name: java # nombre que va a tener el contenedor dentro del POD
    image: jorgecardona/test-kubernetes-ip-java-17:v1 # imagen con la que se va a crear el contenedor

---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: mc-pod-v1-service-cip
  name: mc-pod-v1-svc-clusterip
  namespace: default
spec:

  type: ClusterIP
  
  selector:
    run: pod-v1
    
  ports:
  - name: port-java # se puede poner el nombre que se quiera, lo importante es el puerto que TIENE que ser el del contenedor
    protocol: TCP
    targetPort: 9999 # puerto original donde se expone el contenedor de la imagen 
    port: 3333 # puerto en el que se quiere exponer la aplicacion, solo porque esta declarada la propiedad targetPort
    
  - name: port-python
    protocol: TCP
    targetPort: 5000 # puerto original donde se expone el contenedor de la imagen 
    port: 7777 # puerto en el que se quiere exponer la aplicacion, solo porque esta declarada la propiedad targetPort
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: pod-v2 # base del selector
  name: mc-pod-v2 # nombre del HOSTNAME del POD y el nombre del POD en k8s
spec:
    
  containers:
  - name: python # nombre que va a tener el contenedor dentro del POD
    image: jorgecardona/test-kubernetes-ip-python-3.10.5:v1 # imagen con la que se va a crear el contenedor
      
  - name: java # nombre que va a tener el contenedor dentro del POD
    image: jorgecardona/test-kubernetes-ip-java-17:v1 # imagen con la que se va a crear el contenedor

---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: mc-pod-v2-service-lb
  name: mc-pod-v2-svc-loadbalancer
  namespace: default
spec:
  sessionAffinity: None
  type: LoadBalancer
  selector:
    run: pod-v2
  ports:

  - name: port-java # se puede poner el nombre que se quiera, lo importante es el puerto que TIENE que ser el del contenedor
    protocol: TCP
    targetPort: 9999 # puerto original donde se expone el contenedor de la imagen 
    port: 4444 # puerto en el que se quiere exponer la aplicacion, solo porque esta declarada la propiedad targetPort
    
  - name: port-python
    protocol: TCP
    targetPort: 5000 # puerto original donde se expone el contenedor de la imagen 
    port: 5555 # puerto en el que se quiere exponer la aplicacion, solo porque esta declarada la propiedad targetPort
---
# kubectl exec multicontainer-pod-v2 -c=java -it -- sh
# Instalar bash y curl
# apk update
# apk upgrade
# apk add bash
# apk add curl
# curl multicontainer-pod-v1-svc-loadbalancer:3333
# curl multicontainer-pod-v1-svc-loadbalancer:7777/all